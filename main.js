(()=>{"use strict";var n={16:(n,e,t)=>{t.d(e,{A:()=>A});var o=t(354),r=t.n(o),i=t(314),a=t.n(i)()(r());a.push([n.id,"*{\n    padding: 0px;\n    margin: 0px;\n    box-sizing: border-box;\n}\nhtml{\n    height: 100vh;\n}\nbody{\n    height: 100%;\n}\n\n.container{\n    display: grid;\n    grid-template-columns: 1fr 4fr;\n    height: 100%;\n}\n\n.sidebar{\n    background-color: rgb(115, 115, 206);\n    color: white;\n    padding-left: 12px;\n    padding-right: 12px;\n    \n    \n}\n.sidebar h1{\n    \n    font-size: 40px;\n    margin-top: 20px;\n    margin-bottom: 40px;\n}\n\n.project-heading-wrap{\n    display: flex;\n    align-items: center;\n    gap: 16px;\n    margin-bottom: 12px;\n    padding-left: 8px;\n    \n}\n\n.sidebar h2{\n    font-size: 30px;\n    \n    \n}\n\n.sidebar .new-project-button{\n   width: 30px;\n   \n   border-radius: 20px;\n   box-shadow: 1px 1px 4px 1px rgba(255, 255, 255, 0.2);\n   \n    \n}\n.sidebar .new-project-button:active{\n    box-shadow: none;\n}\n\n\n.projects{\n    padding-left: 16px;\n    width: fit-content;\n    \n}\n\n.projects button{\n    display: block;\n    background: none;\n    border: none;\n    color: white;\n    \n    font-size: 18px;\n    \n\n}\n.sidebar button:hover{\n    color: gainsboro;\n}\n\n.filter-white{\n    filter: invert(100%) sepia(100%) saturate(2%) hue-rotate(219deg) brightness(111%) contrast(101%);\n}\n.filter-background-color{\n    filter: invert(51%) sepia(48%) saturate(2576%) hue-rotate(214deg) brightness(87%) contrast(84%);\n}\n\n.content input{\n    width: 50px;\n    box-shadow: 1px 1px 2px 2px rgba(0, 0, 0, 0.5);\n    border-radius: 30px;\n    \n   \n    \n}\n.content input:active{\n    box-shadow: none;\n}\n\n.content{\n    padding-top: 20px;\n    padding-left: 12px;\n    padding-right: 12px;\n   \n}\n\n.new-to-do-modal, .show-todo-modal{\n    left: 50%;\n    top: 30%;\n    transform: translate(-50%, -50%);\n    width: 400px;\n    height: 350px;\n    border: none;\n    box-shadow: 2px 2px rgba(0, 0, 0, 0.5);\n    padding: 8px;\n    border-radius: 6px;\n    \n}\n\n.new-to-do-modal #description, .show-todo-modal #show-description{\n    display: block;\n}\n\n\n\n.new-to-do-modal form, .show-todo-modal form{\n    height: 100%;\n    display: flex;\n    flex-direction: column;\n    justify-content: space-evenly;\n\n}\n\n\n.description-wrapper{\n    margin-bottom: 10px;\n}\n.new-to-do-modal fieldset, .show-todo-modal fieldset{\n    margin-bottom: 7px;\n    border: none;\n}\n\n.new-project-modal{\n    left: 50%;\n    top: 30%;\n    transform: translate(-50%, -50%);\n    padding: 10px;\n    border: none;\n    box-shadow: 2px 2px rgba(0, 0, 0, 0.5);\n\n}\n\n.new-project-modal form{\n    display: flex;\n    flex-direction: column;\n    gap: 8px;\n}\n\n.todo-container{\n    width: 100%;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    height: 700px\n    \n}\n.todo-grid{\n    height: 500px;\n    width: 80%;\n    border: 1px solid  rgb(115, 115, 206);\n    border-radius: 9px;\n    box-shadow: 1px 1px 1px 1px gray;\n    overflow: scroll;\n}\n\n.todo-grid > div{\n    display: flex;\n    justify-content: space-between;\n    padding: 12px;\n    border-bottom: 1px dotted rgb(115, 115, 206);\n    border-radius: 9px;\n    \n}\n\n.content h1{\n    color: rgb(115, 115, 206);\n    font-style: italic;\n}\n\n.todo-grid > div:hover{\n    background-color: rgb(234, 230, 230)\n}\n\n@media (max-width: 700px){\n    .container{\n        display: flex;\n        flex-direction: column;\n    }\n    .projects{\n        display: flex;\n        gap: 12px;\n    }\n    .sidebar{\n       display: flex;\n       flex-direction: column;\n\n       justify-content: center;\n       gap: 14px;\n       padding: 16px;\n       width: 100%;\n    }\n   \n    .todo-grid{\n        width: 95%;\n    }\n    .new-to-do-modal form div:first-child, .show-todo-modal form div:first-child{\n        display: flex;\n        flex-direction: column;\n    }\n   \n}\n","",{version:3,sources:["webpack://./src/css/style.css"],names:[],mappings:"AAAA;IACI,YAAY;IACZ,WAAW;IACX,sBAAsB;AAC1B;AACA;IACI,aAAa;AACjB;AACA;IACI,YAAY;AAChB;;AAEA;IACI,aAAa;IACb,8BAA8B;IAC9B,YAAY;AAChB;;AAEA;IACI,oCAAoC;IACpC,YAAY;IACZ,kBAAkB;IAClB,mBAAmB;;;AAGvB;AACA;;IAEI,eAAe;IACf,gBAAgB;IAChB,mBAAmB;AACvB;;AAEA;IACI,aAAa;IACb,mBAAmB;IACnB,SAAS;IACT,mBAAmB;IACnB,iBAAiB;;AAErB;;AAEA;IACI,eAAe;;;AAGnB;;AAEA;GACG,WAAW;;GAEX,mBAAmB;GACnB,oDAAoD;;;AAGvD;AACA;IACI,gBAAgB;AACpB;;;AAGA;IACI,kBAAkB;IAClB,kBAAkB;;AAEtB;;AAEA;IACI,cAAc;IACd,gBAAgB;IAChB,YAAY;IACZ,YAAY;;IAEZ,eAAe;;;AAGnB;AACA;IACI,gBAAgB;AACpB;;AAEA;IACI,gGAAgG;AACpG;AACA;IACI,+FAA+F;AACnG;;AAEA;IACI,WAAW;IACX,8CAA8C;IAC9C,mBAAmB;;;;AAIvB;AACA;IACI,gBAAgB;AACpB;;AAEA;IACI,iBAAiB;IACjB,kBAAkB;IAClB,mBAAmB;;AAEvB;;AAEA;IACI,SAAS;IACT,QAAQ;IACR,gCAAgC;IAChC,YAAY;IACZ,aAAa;IACb,YAAY;IACZ,sCAAsC;IACtC,YAAY;IACZ,kBAAkB;;AAEtB;;AAEA;IACI,cAAc;AAClB;;;;AAIA;IACI,YAAY;IACZ,aAAa;IACb,sBAAsB;IACtB,6BAA6B;;AAEjC;;;AAGA;IACI,mBAAmB;AACvB;AACA;IACI,kBAAkB;IAClB,YAAY;AAChB;;AAEA;IACI,SAAS;IACT,QAAQ;IACR,gCAAgC;IAChC,aAAa;IACb,YAAY;IACZ,sCAAsC;;AAE1C;;AAEA;IACI,aAAa;IACb,sBAAsB;IACtB,QAAQ;AACZ;;AAEA;IACI,WAAW;IACX,aAAa;IACb,sBAAsB;IACtB,uBAAuB;IACvB,mBAAmB;IACnB;;AAEJ;AACA;IACI,aAAa;IACb,UAAU;IACV,qCAAqC;IACrC,kBAAkB;IAClB,gCAAgC;IAChC,gBAAgB;AACpB;;AAEA;IACI,aAAa;IACb,8BAA8B;IAC9B,aAAa;IACb,4CAA4C;IAC5C,kBAAkB;;AAEtB;;AAEA;IACI,yBAAyB;IACzB,kBAAkB;AACtB;;AAEA;IACI;AACJ;;AAEA;IACI;QACI,aAAa;QACb,sBAAsB;IAC1B;IACA;QACI,aAAa;QACb,SAAS;IACb;IACA;OACG,aAAa;OACb,sBAAsB;;OAEtB,uBAAuB;OACvB,SAAS;OACT,aAAa;OACb,WAAW;IACd;;IAEA;QACI,UAAU;IACd;IACA;QACI,aAAa;QACb,sBAAsB;IAC1B;;AAEJ",sourcesContent:["*{\n    padding: 0px;\n    margin: 0px;\n    box-sizing: border-box;\n}\nhtml{\n    height: 100vh;\n}\nbody{\n    height: 100%;\n}\n\n.container{\n    display: grid;\n    grid-template-columns: 1fr 4fr;\n    height: 100%;\n}\n\n.sidebar{\n    background-color: rgb(115, 115, 206);\n    color: white;\n    padding-left: 12px;\n    padding-right: 12px;\n    \n    \n}\n.sidebar h1{\n    \n    font-size: 40px;\n    margin-top: 20px;\n    margin-bottom: 40px;\n}\n\n.project-heading-wrap{\n    display: flex;\n    align-items: center;\n    gap: 16px;\n    margin-bottom: 12px;\n    padding-left: 8px;\n    \n}\n\n.sidebar h2{\n    font-size: 30px;\n    \n    \n}\n\n.sidebar .new-project-button{\n   width: 30px;\n   \n   border-radius: 20px;\n   box-shadow: 1px 1px 4px 1px rgba(255, 255, 255, 0.2);\n   \n    \n}\n.sidebar .new-project-button:active{\n    box-shadow: none;\n}\n\n\n.projects{\n    padding-left: 16px;\n    width: fit-content;\n    \n}\n\n.projects button{\n    display: block;\n    background: none;\n    border: none;\n    color: white;\n    \n    font-size: 18px;\n    \n\n}\n.sidebar button:hover{\n    color: gainsboro;\n}\n\n.filter-white{\n    filter: invert(100%) sepia(100%) saturate(2%) hue-rotate(219deg) brightness(111%) contrast(101%);\n}\n.filter-background-color{\n    filter: invert(51%) sepia(48%) saturate(2576%) hue-rotate(214deg) brightness(87%) contrast(84%);\n}\n\n.content input{\n    width: 50px;\n    box-shadow: 1px 1px 2px 2px rgba(0, 0, 0, 0.5);\n    border-radius: 30px;\n    \n   \n    \n}\n.content input:active{\n    box-shadow: none;\n}\n\n.content{\n    padding-top: 20px;\n    padding-left: 12px;\n    padding-right: 12px;\n   \n}\n\n.new-to-do-modal, .show-todo-modal{\n    left: 50%;\n    top: 30%;\n    transform: translate(-50%, -50%);\n    width: 400px;\n    height: 350px;\n    border: none;\n    box-shadow: 2px 2px rgba(0, 0, 0, 0.5);\n    padding: 8px;\n    border-radius: 6px;\n    \n}\n\n.new-to-do-modal #description, .show-todo-modal #show-description{\n    display: block;\n}\n\n\n\n.new-to-do-modal form, .show-todo-modal form{\n    height: 100%;\n    display: flex;\n    flex-direction: column;\n    justify-content: space-evenly;\n\n}\n\n\n.description-wrapper{\n    margin-bottom: 10px;\n}\n.new-to-do-modal fieldset, .show-todo-modal fieldset{\n    margin-bottom: 7px;\n    border: none;\n}\n\n.new-project-modal{\n    left: 50%;\n    top: 30%;\n    transform: translate(-50%, -50%);\n    padding: 10px;\n    border: none;\n    box-shadow: 2px 2px rgba(0, 0, 0, 0.5);\n\n}\n\n.new-project-modal form{\n    display: flex;\n    flex-direction: column;\n    gap: 8px;\n}\n\n.todo-container{\n    width: 100%;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    height: 700px\n    \n}\n.todo-grid{\n    height: 500px;\n    width: 80%;\n    border: 1px solid  rgb(115, 115, 206);\n    border-radius: 9px;\n    box-shadow: 1px 1px 1px 1px gray;\n    overflow: scroll;\n}\n\n.todo-grid > div{\n    display: flex;\n    justify-content: space-between;\n    padding: 12px;\n    border-bottom: 1px dotted rgb(115, 115, 206);\n    border-radius: 9px;\n    \n}\n\n.content h1{\n    color: rgb(115, 115, 206);\n    font-style: italic;\n}\n\n.todo-grid > div:hover{\n    background-color: rgb(234, 230, 230)\n}\n\n@media (max-width: 700px){\n    .container{\n        display: flex;\n        flex-direction: column;\n    }\n    .projects{\n        display: flex;\n        gap: 12px;\n    }\n    .sidebar{\n       display: flex;\n       flex-direction: column;\n\n       justify-content: center;\n       gap: 14px;\n       padding: 16px;\n       width: 100%;\n    }\n   \n    .todo-grid{\n        width: 95%;\n    }\n    .new-to-do-modal form div:first-child, .show-todo-modal form div:first-child{\n        display: flex;\n        flex-direction: column;\n    }\n   \n}\n"],sourceRoot:""}]);const A=a},314:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var t="",o=void 0!==e[5];return e[4]&&(t+="@supports (".concat(e[4],") {")),e[2]&&(t+="@media ".concat(e[2]," {")),o&&(t+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),t+=n(e),o&&(t+="}"),e[2]&&(t+="}"),e[4]&&(t+="}"),t})).join("")},e.i=function(n,t,o,r,i){"string"==typeof n&&(n=[[null,n,void 0]]);var a={};if(o)for(var A=0;A<this.length;A++){var d=this[A][0];null!=d&&(a[d]=!0)}for(var c=0;c<n.length;c++){var s=[].concat(n[c]);o&&a[s[0]]||(void 0!==i&&(void 0===s[5]||(s[1]="@layer".concat(s[5].length>0?" ".concat(s[5]):""," {").concat(s[1],"}")),s[5]=i),t&&(s[2]?(s[1]="@media ".concat(s[2]," {").concat(s[1],"}"),s[2]=t):s[2]=t),r&&(s[4]?(s[1]="@supports (".concat(s[4],") {").concat(s[1],"}"),s[4]=r):s[4]="".concat(r)),e.push(s))}},e}},354:n=>{n.exports=function(n){var e=n[1],t=n[3];if(!t)return e;if("function"==typeof btoa){var o=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),r="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(o),i="/*# ".concat(r," */");return[e].concat([i]).join("\n")}return[e].join("\n")}},72:n=>{var e=[];function t(n){for(var t=-1,o=0;o<e.length;o++)if(e[o].identifier===n){t=o;break}return t}function o(n,o){for(var i={},a=[],A=0;A<n.length;A++){var d=n[A],c=o.base?d[0]+o.base:d[0],s=i[c]||0,l="".concat(c," ").concat(s);i[c]=s+1;var p=t(l),u={css:d[1],media:d[2],sourceMap:d[3],supports:d[4],layer:d[5]};if(-1!==p)e[p].references++,e[p].updater(u);else{var m=r(u,o);o.byIndex=A,e.splice(A,0,{identifier:l,updater:m,references:1})}a.push(l)}return a}function r(n,e){var t=e.domAPI(e);return t.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;t.update(n=e)}else t.remove()}}n.exports=function(n,r){var i=o(n=n||[],r=r||{});return function(n){n=n||[];for(var a=0;a<i.length;a++){var A=t(i[a]);e[A].references--}for(var d=o(n,r),c=0;c<i.length;c++){var s=t(i[c]);0===e[s].references&&(e[s].updater(),e.splice(s,1))}i=d}}},659:n=>{var e={};n.exports=function(n,t){var o=function(n){if(void 0===e[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}e[n]=t}return e[n]}(n);if(!o)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");o.appendChild(t)}},540:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},56:(n,e,t)=>{n.exports=function(n){var e=t.nc;e&&n.setAttribute("nonce",e)}},825:n=>{n.exports=function(n){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var e=n.insertStyleElement(n);return{update:function(t){!function(n,e,t){var o="";t.supports&&(o+="@supports (".concat(t.supports,") {")),t.media&&(o+="@media ".concat(t.media," {"));var r=void 0!==t.layer;r&&(o+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),o+=t.css,r&&(o+="}"),t.media&&(o+="}"),t.supports&&(o+="}");var i=t.sourceMap;i&&"undefined"!=typeof btoa&&(o+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(i))))," */")),e.styleTagTransform(o,n,e.options)}(e,n,t)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},113:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}}},e={};function t(o){var r=e[o];if(void 0!==r)return r.exports;var i=e[o]={id:o,exports:{}};return n[o](i,i.exports,t),i.exports}t.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return t.d(e,{a:e}),e},t.d=(n,e)=>{for(var o in e)t.o(e,o)&&!t.o(n,o)&&Object.defineProperty(n,o,{enumerable:!0,get:e[o]})},t.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),t.nc=void 0;var o=t(72),r=t.n(o),i=t(825),a=t.n(i),A=t(659),d=t.n(A),c=t(56),s=t.n(c),l=t(540),p=t.n(l),u=t(113),m=t.n(u),g=t(16),C={};function h(n){let e=[];return{title:n,addToDo:n=>{e.push(n)},removeToDo:n=>{e.splice(+n,1)},getCurrentList:()=>e}}C.styleTagTransform=m(),C.setAttributes=s(),C.insert=d().bind(null,"head"),C.domAPI=a(),C.insertStyleElement=p(),r()(g.A,C),g.A&&g.A.locals&&g.A.locals,function(){const n=function(){const n=h("Misc"),e=function(){const n=[];return{addProjectToLibrary:e=>{n.push(e)},removeProjectFromLibrary:e=>{n.splice(+e,1)},getCurrentLibrary:()=>n}}();let t=n;const o=()=>t;return{setActiveProject:o=>{if("Misc"==o)t=n;else{let n=e.getCurrentLibrary();t=n[+o]}},getActiveProject:o,createNewToDo:(n,e,t,r)=>{o().addToDo(function(n,e,t,o){return{title:n,description:e,dueDate:t,priority:o}}(n,e,t,r))},getProjectTodoList:n=>n.getCurrentList(),getProjectLibrary:()=>e.getCurrentLibrary(),createNewProject:n=>{e.addProjectToLibrary(h(n))}}}(),e=document.querySelector(".new-item-button"),t=document.querySelector(".new-to-do-modal");e.addEventListener("click",(()=>{o(),t.showModal()}));const o=()=>{a.value="",A.value="",d.value="",document.getElementsByName("priority").forEach((n=>{"low"===n.value?n.checked=!0:n.checked=!1}))},r=document.querySelector(".new-project-button"),i=document.querySelector(".new-project-modal");r.addEventListener("click",(()=>{i.showModal()}));const a=document.querySelector("#title-input"),A=document.querySelector("#description"),d=document.querySelector("#due-date"),c=document.querySelector(".new-to-do-form"),s=document.querySelector(".cancel-new-todo"),l=document.querySelector(".cancel-new-project");s.addEventListener("click",(()=>{t.close()})),l.addEventListener("click",(()=>{i.close()})),document.querySelector(".submit-new-todo"),c.addEventListener("submit",(e=>{e.preventDefault(),n.createNewToDo(a.value,A.value,d.value,document.querySelector('input[name="priority"]:checked').value),u(),t.close(),a.value="",A.value="",priority.value="low",d.value="yyyy-mm-dd",console.log(n.getActiveProject())}));const p=document.querySelector(".todo-grid"),u=()=>{let e=n.getActiveProject().getCurrentList(),t=e[e.length-1],o=e.length-1;const r=document.createElement("div");r.setAttribute("name",o);const i=document.createElement("div");i.textContent=`Title: ${t.title}`;const a=document.createElement("div");a.textContent=`Due date: ${t.dueDate}`,r.appendChild(i),r.appendChild(a),r.appendChild(b(o)),p.appendChild(r)},m=()=>{p.innerHTML="";let e=n.getActiveProject().getCurrentList();e.forEach((n=>{let t=e.indexOf(n);const o=document.createElement("div");o.setAttribute("name",t);const r=document.createElement("div");r.textContent=`Title: ${n.title}`;const i=document.createElement("div");i.textContent=`Due date: ${n.dueDate}`,o.appendChild(r),o.appendChild(i),o.appendChild(b(t)),p.appendChild(o)}))},g=(document.querySelector(".submit-new-project"),document.querySelector("#project-title")),C=document.querySelector(".projects");document.querySelector(".new-project-form").addEventListener("submit",(e=>{e.preventDefault(),n.createNewProject(g.value),f(),i.close(),g.value=""}));const f=()=>{const e=document.createElement("button"),t=n.getProjectLibrary(),o=t.length-1,r=t[o];e.textContent=r.title,e.setAttribute("name",o),e.setAttribute("class","projectButton"),C.appendChild(e)},x=document.querySelector(".content h1");document.querySelector(".projects").addEventListener("click",(e=>{e.target.classList.contains("projectButton")&&(p.innerHTML=""),n.setActiveProject(e.target.getAttribute("name")),(()=>{let e=n.getActiveProject().title;x.textContent=e})(),m(),console.log(n.getActiveProject())}));const b=e=>{const t=document.createElement("button");return t.setAttribute("type","button"),t.textContent="Delete",t.addEventListener("mouseup",(t=>{n.getActiveProject().removeToDo(e),p.innerHTML="",m()})),t},v=document.querySelector(".show-todo-modal");let I=null;p.addEventListener("click",(e=>{if("todo-grid"===e.target.getAttribute("class"))return;let t=e.target.getAttribute("name"),o=n.getActiveProject().getCurrentList()[+t];I=o,((n,e,t,o)=>{const r=document.querySelector("#show-title-input"),i=document.querySelector("#show-due-date"),a=document.querySelector("#show-description");r.value=n,i.value=e,a.value=t,document.getElementsByName("show-priority").forEach((n=>{n.value===o&&(n.checked=!0)})),v.showModal()})(o.title,o.dueDate,o.description,o.priority)}));const B=document.querySelector(".save-show-todo");document.querySelector(".close-show-todo").addEventListener("click",(()=>{v.close()})),B.addEventListener("click",(n=>{n.preventDefault(),I.title=document.querySelector("#show-title-input").value,I.dueDate=document.querySelector("#show-due-date").value,I.description=document.querySelector("#show-description").value,document.getElementsByName("show-priority").forEach((n=>{n.checked&&(I.priority=n.value)})),v.close(),m()}))}()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,